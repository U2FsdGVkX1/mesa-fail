--- src/egl/drivers/dri2/platform_drm.c	2022-07-16 01:42:47.000000000 +0800
+++ src/egl/drivers/dri2/platform_drm.c	2023-09-01 10:16:24.070203283 +0800
@@ -595,7 +683,7 @@
 {
    struct dri2_egl_display *dri2_dpy = dri2_egl_display(disp);
 
-   return drmAuthMagic(dri2_dpy->fd, id);
+   return drmAuthMagic(dri2_dpy->fd_dpy, id);
 }
 
 static void
@@ -782,6 +872,7 @@
       return _eglError(EGL_BAD_ALLOC, "eglInitialize");
 
    dri2_dpy->fd = -1;
+   dri2_dpy->fd_dpy = -1;
    disp->DriverData = (void *) dri2_dpy;
 
    gbm = disp->PlatformDisplay;
@@ -789,16 +880,16 @@
       char buf[64];
       int n = snprintf(buf, sizeof(buf), DRM_DEV_NAME, DRM_DIR_NAME, 0);
       if (n != -1 && n < sizeof(buf))
-         dri2_dpy->fd = loader_open_device(buf);
-      gbm = gbm_create_device(dri2_dpy->fd);
+         dri2_dpy->fd_dpy = loader_open_device(buf);
+      gbm = gbm_create_device(dri2_dpy->fd_dpy);
       if (gbm == NULL) {
          err = "DRI2: failed to create gbm device";
          goto cleanup;
       }
       dri2_dpy->own_device = true;
    } else {
-      dri2_dpy->fd = os_dupfd_cloexec(gbm_device_get_fd(gbm));
-      if (dri2_dpy->fd < 0) {
+      dri2_dpy->fd_dpy = os_dupfd_cloexec(gbm_device_get_fd(gbm));
+      if (dri2_dpy->fd_dpy < 0) {
          err = "DRI2: failed to fcntl() existing gbm device";
          goto cleanup;
       }
@@ -810,6 +901,12 @@
       goto cleanup;
    }
 
+   if (gbm_dri_device_get_fd(dri2_dpy->gbm_dri) ==
+       gbm_device_get_fd(gbm))
+      dri2_dpy->fd = dri2_dpy->fd_dpy;
+   else
+      dri2_dpy->fd = os_dupfd_cloexec(gbm_dri_device_get_fd(dri2_dpy->gbm_dri));
+
    dev = _eglAddDevice(dri2_dpy->fd, dri2_dpy->gbm_dri->software);
    if (!dev) {
       err = "DRI2: failed to find EGLDevice";
@@ -875,7 +972,7 @@
       disp->Extensions.EXT_buffer_age = EGL_TRUE;
 
 #ifdef HAVE_WAYLAND_PLATFORM
-   dri2_dpy->device_name = loader_get_device_name_for_fd(dri2_dpy->fd);
+   dri2_dpy->device_name = loader_get_device_name_for_fd(dri2_dpy->fd_dpy);
 #endif
    dri2_set_WL_bind_wayland_display(disp);
 
