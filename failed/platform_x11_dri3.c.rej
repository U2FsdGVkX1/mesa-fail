--- src/egl/drivers/dri2/platform_x11_dri3.c	2022-07-16 01:42:47.000000000 +0800
+++ src/egl/drivers/dri2/platform_x11_dri3.c	2023-09-01 10:16:24.093203712 +0800
@@ -195,7 +201,7 @@
    if (loader_dri3_drawable_init(dri2_dpy->conn, drawable,
                                  egl_to_loader_dri3_drawable_type(type),
                                  dri2_dpy->dri_screen,
-                                 dri2_dpy->is_different_gpu,
+                                 is_incompat_gpu,
                                  dri2_dpy->multibuffers_available,
                                  true,
                                  dri_config,
@@ -650,12 +667,25 @@
       return EGL_FALSE;
    }
 
+   fd_old = dri2_dpy->fd;
+   dri2_dpy->fd_dpy = os_dupfd_cloexec(dri2_dpy->fd);
    dri2_dpy->fd = loader_get_user_preferred_fd(dri2_dpy->fd, &dri2_dpy->is_different_gpu);
+   if (dri2_dpy->fd == fd_old) {
+      if (dri2_dpy->fd_dpy != -1)
+         close(dri2_dpy->fd_dpy);
+
+      dri2_dpy->fd_dpy = dri2_dpy->fd;
+   } else if (dri2_dpy->fd_dpy == -1) {
+      _eglLog(_EGL_WARNING, "DRI3: failed to dup display FD");
+      close(dri2_dpy->fd);
+      return EGL_FALSE;
+   }
 
    dri2_dpy->driver_name = loader_get_driver_for_fd(dri2_dpy->fd);
    if (!dri2_dpy->driver_name) {
       _eglLog(_EGL_WARNING, "DRI3: No driver found");
       close(dri2_dpy->fd);
+      close(dri2_dpy->fd_dpy);
       return EGL_FALSE;
    }
 
